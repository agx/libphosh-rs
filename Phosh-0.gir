<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gcr" version="3"/>
  <include name="Gio" version="2.0"/>
  <include name="GnomeBluetooth" version="3.0"/>
  <include name="GnomeDesktop" version="3.0"/>
  <include name="Gtk" version="3.0"/>
  <include name="Handy" version="1"/>
  <include name="NM" version="1.0"/>
  <package name="libphosh-0.45"/>
  <c:include name="libphosh.h"/>
  <namespace name="Phosh"
             version="0"
             shared-library="libphosh-0.45.so.0"
             c:identifier-prefixes="Phosh"
             c:symbol-prefixes="phosh">
    <function-macro name="DBUS_IS_SCREENSHOT"
                    c:identifier="PHOSH_DBUS_IS_SCREENSHOT"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="22"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_IS_SCREENSHOT_PROXY"
                    c:identifier="PHOSH_DBUS_IS_SCREENSHOT_PROXY"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="285"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_IS_SCREENSHOT_PROXY_CLASS"
                    c:identifier="PHOSH_DBUS_IS_SCREENSHOT_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="286"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_IS_SCREENSHOT_SKELETON"
                    c:identifier="PHOSH_DBUS_IS_SCREENSHOT_SKELETON"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="355"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_IS_SCREENSHOT_SKELETON_CLASS"
                    c:identifier="PHOSH_DBUS_IS_SCREENSHOT_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="356"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_SCREENSHOT"
                    c:identifier="PHOSH_DBUS_SCREENSHOT"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="21"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_SCREENSHOT_GET_IFACE"
                    c:identifier="PHOSH_DBUS_SCREENSHOT_GET_IFACE"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="23"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_SCREENSHOT_PROXY"
                    c:identifier="PHOSH_DBUS_SCREENSHOT_PROXY"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="282"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_SCREENSHOT_PROXY_CLASS"
                    c:identifier="PHOSH_DBUS_SCREENSHOT_PROXY_CLASS"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="283"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_SCREENSHOT_PROXY_GET_CLASS"
                    c:identifier="PHOSH_DBUS_SCREENSHOT_PROXY_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="284"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_SCREENSHOT_SKELETON"
                    c:identifier="PHOSH_DBUS_SCREENSHOT_SKELETON"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="352"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_SCREENSHOT_SKELETON_CLASS"
                    c:identifier="PHOSH_DBUS_SCREENSHOT_SKELETON_CLASS"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="353"/>
      <parameters>
        <parameter name="k">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="DBUS_SCREENSHOT_SKELETON_GET_CLASS"
                    c:identifier="PHOSH_DBUS_SCREENSHOT_SKELETON_GET_CLASS"
                    introspectable="0">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="354"/>
      <parameters>
        <parameter name="o">
        </parameter>
      </parameters>
    </function-macro>
    <interface name="DBusScreenshot"
               c:symbol-prefix="dbus_screenshot"
               c:type="PhoshDBusScreenshot"
               glib:type-name="PhoshDBusScreenshot"
               glib:get-type="phosh_dbus_screenshot_get_type"
               glib:type-struct="DBusScreenshotIface">
      <doc xml:space="preserve"
           filename="src/dbus/phosh-screenshot-dbus.c"
           line="1057">Abstract interface type for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Shell-Screenshot.top_of_page"&gt;org.gnome.Shell.Screenshot&lt;/link&gt;.</doc>
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="74"/>
      <function name="interface_info"
                c:identifier="phosh_dbus_screenshot_interface_info">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="948">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-gnome-Shell-Screenshot.top_of_page"&gt;org.gnome.Shell.Screenshot&lt;/link&gt; D-Bus interface.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="953">A #GDBusInterfaceInfo. Do not free.</doc>
          <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
        </return-value>
      </function>
      <function name="override_properties"
                c:identifier="phosh_dbus_screenshot_override_properties">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="961">Overrides all #GObject properties in the #PhoshDBusScreenshot interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="83"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="969">The last property id.</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="klass" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="963">The class structure for a #GObject derived class.</doc>
            <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
          </parameter>
          <parameter name="property_id_begin" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="964">The property id to assign to the first overridden property.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="handle_flash_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1066">Handler for the #PhoshDBusScreenshot::handle-flash-area signal.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="33"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="arg_x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_pick_color">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1067">Handler for the #PhoshDBusScreenshot::handle-pick-color signal.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="41"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_screenshot">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1068">Handler for the #PhoshDBusScreenshot::handle-screenshot signal.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="arg_include_cursor" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_screenshot_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1069">Handler for the #PhoshDBusScreenshot::handle-screenshot-area signal.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="52"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="arg_x" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_y" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_width" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_height" transfer-ownership="none">
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_screenshot_window">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1070">Handler for the #PhoshDBusScreenshot::handle-screenshot-window signal.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="62"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="arg_include_frame" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_include_cursor" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_select_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1071">Handler for the #PhoshDBusScreenshot::handle-select-area signal.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="70"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="none">
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="call_flash_area"
              c:identifier="phosh_dbus_screenshot_call_flash_area"
              glib:finish-func="call_flash_area_finish"
              glib:sync-func="call_flash_area_sync">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1722">Asynchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.FlashArea"&gt;FlashArea()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call phosh_dbus_screenshot_call_flash_area_finish() to get the result of the operation.

See phosh_dbus_screenshot_call_flash_area_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="229"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1724">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="arg_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1725">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1726">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1727">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1728">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1729">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1730">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1731">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_flash_area_finish"
              c:identifier="phosh_dbus_screenshot_call_flash_area_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1764">Finishes an operation started with phosh_dbus_screenshot_call_flash_area().</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="239"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1772">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1766">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1767">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to phosh_dbus_screenshot_call_flash_area().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_flash_area_sync"
              c:identifier="phosh_dbus_screenshot_call_flash_area_sync"
              throws="1"
              glib:async-func="call_flash_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1791">Synchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.FlashArea"&gt;FlashArea()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See phosh_dbus_screenshot_call_flash_area() for the asynchronous version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="244"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1805">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1793">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="arg_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1794">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1795">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1796">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1797">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1798">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_pick_color"
              c:identifier="phosh_dbus_screenshot_call_pick_color"
              glib:finish-func="call_pick_color_finish"
              glib:sync-func="call_pick_color_sync">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1624">Asynchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.PickColor"&gt;PickColor()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call phosh_dbus_screenshot_call_pick_color_finish() to get the result of the operation.

See phosh_dbus_screenshot_call_pick_color_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="211"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1626">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1627">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1628">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1629">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_pick_color_finish"
              c:identifier="phosh_dbus_screenshot_call_pick_color_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1654">Finishes an operation started with phosh_dbus_screenshot_call_pick_color().</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="217"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1663">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1656">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="out_result"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1657">Return location for return parameter or %NULL to ignore.</doc>
            <type name="GLib.Variant" c:type="GVariant**"/>
          </parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1658">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to phosh_dbus_screenshot_call_pick_color().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_pick_color_sync"
              c:identifier="phosh_dbus_screenshot_call_pick_color_sync"
              throws="1"
              glib:async-func="call_pick_color">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1684">Synchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.PickColor"&gt;PickColor()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See phosh_dbus_screenshot_call_pick_color() for the asynchronous version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="223"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1695">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1686">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="out_result"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1687">Return location for return parameter or %NULL to ignore.</doc>
            <type name="GLib.Variant" c:type="GVariant**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1688">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_screenshot"
              c:identifier="phosh_dbus_screenshot_call_screenshot"
              glib:finish-func="call_screenshot_finish"
              glib:sync-func="call_screenshot_sync">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1234">Asynchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.Screenshot"&gt;Screenshot()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call phosh_dbus_screenshot_call_screenshot_finish() to get the result of the operation.

See phosh_dbus_screenshot_call_screenshot_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1236">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="arg_include_cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1237">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1238">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1239">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1240">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="5">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1241">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1242">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_screenshot_area"
              c:identifier="phosh_dbus_screenshot_call_screenshot_area"
              glib:finish-func="call_screenshot_area_finish"
              glib:sync-func="call_screenshot_area_sync">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1484">Asynchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.ScreenshotArea"&gt;ScreenshotArea()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call phosh_dbus_screenshot_call_screenshot_area_finish() to get the result of the operation.

See phosh_dbus_screenshot_call_screenshot_area_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="179"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1486">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="arg_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1487">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1488">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1489">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1490">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1491">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1492">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1493">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="8">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1494">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1495">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_screenshot_area_finish"
              c:identifier="phosh_dbus_screenshot_call_screenshot_area_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1532">Finishes an operation started with phosh_dbus_screenshot_call_screenshot_area().</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="191"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1542">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1534">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="out_success"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1535">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="out_filename_used"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1536">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1537">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to phosh_dbus_screenshot_call_screenshot_area().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_screenshot_area_sync"
              c:identifier="phosh_dbus_screenshot_call_screenshot_area_sync"
              throws="1"
              glib:async-func="call_screenshot_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1565">Synchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.ScreenshotArea"&gt;ScreenshotArea()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See phosh_dbus_screenshot_call_screenshot_area() for the asynchronous version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="198"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1583">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1567">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="arg_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1568">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1569">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1570">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1571">Argument to pass with the method invocation.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1572">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1573">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="out_success"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1574">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="out_filename_used"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1575">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1576">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_screenshot_finish"
              c:identifier="phosh_dbus_screenshot_call_screenshot_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1273">Finishes an operation started with phosh_dbus_screenshot_call_screenshot().</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="134"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1283">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1275">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="out_success"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1276">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="out_filename_used"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1277">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1278">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to phosh_dbus_screenshot_call_screenshot().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_screenshot_sync"
              c:identifier="phosh_dbus_screenshot_call_screenshot_sync"
              throws="1"
              glib:async-func="call_screenshot">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1306">Synchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.Screenshot"&gt;Screenshot()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See phosh_dbus_screenshot_call_screenshot() for the asynchronous version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="141"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1321">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1308">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="arg_include_cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1309">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1310">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1311">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="out_success"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1312">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="out_filename_used"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1313">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1314">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_screenshot_window"
              c:identifier="phosh_dbus_screenshot_call_screenshot_window"
              glib:finish-func="call_screenshot_window_finish"
              glib:sync-func="call_screenshot_window_sync">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1356">Asynchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.ScreenshotWindow"&gt;ScreenshotWindow()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call phosh_dbus_screenshot_call_screenshot_window_finish() to get the result of the operation.

See phosh_dbus_screenshot_call_screenshot_window_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="151"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1358">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="arg_include_frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1359">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_include_cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1360">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1361">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1362">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1363">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1364">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1365">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_screenshot_window_finish"
              c:identifier="phosh_dbus_screenshot_call_screenshot_window_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1398">Finishes an operation started with phosh_dbus_screenshot_call_screenshot_window().</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="161"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1408">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1400">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="out_success"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1401">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="out_filename_used"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1402">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1403">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to phosh_dbus_screenshot_call_screenshot_window().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_screenshot_window_sync"
              c:identifier="phosh_dbus_screenshot_call_screenshot_window_sync"
              throws="1"
              glib:async-func="call_screenshot_window">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1431">Synchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.ScreenshotWindow"&gt;ScreenshotWindow()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See phosh_dbus_screenshot_call_screenshot_window() for the asynchronous version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="168"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1447">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1433">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="arg_include_frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1434">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_include_cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1435">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1436">Argument to pass with the method invocation.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1437">Argument to pass with the method invocation.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="out_success"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1438">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
          <parameter name="out_filename_used"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1439">Return location for return parameter or %NULL to ignore.</doc>
            <type name="utf8" c:type="gchar**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1440">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_select_area"
              c:identifier="phosh_dbus_screenshot_call_select_area"
              glib:finish-func="call_select_area_finish"
              glib:sync-func="call_select_area_sync">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1838">Asynchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.SelectArea"&gt;SelectArea()&lt;/link&gt; D-Bus method on @proxy.
When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call phosh_dbus_screenshot_call_select_area_finish() to get the result of the operation.

See phosh_dbus_screenshot_call_select_area_sync() for the synchronous, blocking version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="253"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1840">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1841">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="2">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1842">A #GAsyncReadyCallback to call when the request is satisfied or %NULL.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1843">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_select_area_finish"
              c:identifier="phosh_dbus_screenshot_call_select_area_finish"
              throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1868">Finishes an operation started with phosh_dbus_screenshot_call_select_area().</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="259"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1880">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1870">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="out_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1871">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="out_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1872">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="out_width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1873">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="out_height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1874">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1875">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to phosh_dbus_screenshot_call_select_area().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_select_area_sync"
              c:identifier="phosh_dbus_screenshot_call_select_area_sync"
              throws="1"
              glib:async-func="call_select_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1907">Synchronously invokes the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.SelectArea"&gt;SelectArea()&lt;/link&gt; D-Bus method on @proxy. The calling thread is blocked until a reply is received.

See phosh_dbus_screenshot_call_select_area() for the asynchronous version of this method.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="268"/>
        <return-value transfer-ownership="none" skip="1">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1921">%TRUE if the call succeeded, %FALSE if @error is set.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="proxy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1909">A #PhoshDBusScreenshotProxy.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="out_x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1910">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="out_y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1911">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="out_width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1912">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="out_height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     optional="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1913">Return location for return parameter or %NULL to ignore.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1914">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_flash_area"
              c:identifier="phosh_dbus_screenshot_complete_flash_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2047">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.FlashArea"&gt;FlashArea()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2049">A #PhoshDBusScreenshot.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2050">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_pick_color"
              c:identifier="phosh_dbus_screenshot_complete_pick_color">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2026">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.PickColor"&gt;PickColor()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2028">A #PhoshDBusScreenshot.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2029">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2030">Parameter to return.</doc>
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_screenshot"
              c:identifier="phosh_dbus_screenshot_complete_screenshot">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1954">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.Screenshot"&gt;Screenshot()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1956">A #PhoshDBusScreenshot.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1957">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="success" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1958">Parameter to return.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="filename_used" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1959">Parameter to return.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_screenshot_area"
              c:identifier="phosh_dbus_screenshot_complete_screenshot_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2002">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.ScreenshotArea"&gt;ScreenshotArea()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2004">A #PhoshDBusScreenshot.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2005">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="success" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2006">Parameter to return.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="filename_used" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2007">Parameter to return.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_screenshot_window"
              c:identifier="phosh_dbus_screenshot_complete_screenshot_window">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1978">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.ScreenshotWindow"&gt;ScreenshotWindow()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1980">A #PhoshDBusScreenshot.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1981">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="success" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1982">Parameter to return.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="filename_used" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1983">Parameter to return.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete_select_area"
              c:identifier="phosh_dbus_screenshot_complete_select_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2065">Helper function used in service implementations to finish handling invocations of the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.SelectArea"&gt;SelectArea()&lt;/link&gt; D-Bus method. If you instead want to finish handling an invocation by returning an error, use g_dbus_method_invocation_return_error() or similar.

This method will free @invocation, you cannot use it afterwards.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="object" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2067">A #PhoshDBusScreenshot.</doc>
            <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
          </instance-parameter>
          <parameter name="invocation" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2068">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"
                  c:type="GDBusMethodInvocation*"/>
          </parameter>
          <parameter name="x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2069">Parameter to return.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2070">Parameter to return.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2071">Parameter to return.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2072">Parameter to return.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="handle-flash-area" when="last">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1184">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.FlashArea"&gt;FlashArea()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call phosh_dbus_screenshot_complete_flash_area() or e.g. g_dbus_method_invocation_return_error() on it) and no other signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1197">%G_DBUS_METHOD_INVOCATION_HANDLED or %TRUE if the invocation was handled, %G_DBUS_METHOD_INVOCATION_UNHANDLED or %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1187">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
          <parameter name="arg_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1188">Argument passed by remote caller.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1189">Argument passed by remote caller.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1190">Argument passed by remote caller.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1191">Argument passed by remote caller.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-pick-color" when="last">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1162">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.PickColor"&gt;PickColor()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call phosh_dbus_screenshot_complete_pick_color() or e.g. g_dbus_method_invocation_return_error() on it) and no other signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1171">%G_DBUS_METHOD_INVOCATION_HANDLED or %TRUE if the invocation was handled, %G_DBUS_METHOD_INVOCATION_UNHANDLED or %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1165">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-screenshot" when="last">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1083">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.Screenshot"&gt;Screenshot()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call phosh_dbus_screenshot_complete_screenshot() or e.g. g_dbus_method_invocation_return_error() on it) and no other signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1095">%G_DBUS_METHOD_INVOCATION_HANDLED or %TRUE if the invocation was handled, %G_DBUS_METHOD_INVOCATION_UNHANDLED or %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1086">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
          <parameter name="arg_include_cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1087">Argument passed by remote caller.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1088">Argument passed by remote caller.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1089">Argument passed by remote caller.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-screenshot-area" when="last">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1134">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.ScreenshotArea"&gt;ScreenshotArea()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call phosh_dbus_screenshot_complete_screenshot_area() or e.g. g_dbus_method_invocation_return_error() on it) and no other signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1149">%G_DBUS_METHOD_INVOCATION_HANDLED or %TRUE if the invocation was handled, %G_DBUS_METHOD_INVOCATION_UNHANDLED or %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1137">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
          <parameter name="arg_x" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1138">Argument passed by remote caller.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_y" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1139">Argument passed by remote caller.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1140">Argument passed by remote caller.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_height" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1141">Argument passed by remote caller.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1142">Argument passed by remote caller.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1143">Argument passed by remote caller.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-screenshot-window" when="last">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1108">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.ScreenshotWindow"&gt;ScreenshotWindow()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call phosh_dbus_screenshot_complete_screenshot_window() or e.g. g_dbus_method_invocation_return_error() on it) and no other signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1121">%G_DBUS_METHOD_INVOCATION_HANDLED or %TRUE if the invocation was handled, %G_DBUS_METHOD_INVOCATION_UNHANDLED or %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1111">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
          <parameter name="arg_include_frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1112">Argument passed by remote caller.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_include_cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1113">Argument passed by remote caller.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_flash" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1114">Argument passed by remote caller.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="arg_filename" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1115">Argument passed by remote caller.</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="handle-select-area" when="last">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1210">Signal emitted when a remote caller is invoking the &lt;link linkend="gdbus-method-org-gnome-Shell-Screenshot.SelectArea"&gt;SelectArea()&lt;/link&gt; D-Bus method.

If a signal handler returns %TRUE, it means the signal handler will handle the invocation (e.g. take a reference to @invocation and eventually call phosh_dbus_screenshot_complete_select_area() or e.g. g_dbus_method_invocation_return_error() on it) and no other signal handlers will run. If no signal handler handles the invocation, the %G_DBUS_ERROR_UNKNOWN_METHOD error is returned.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="1219">%G_DBUS_METHOD_INVOCATION_HANDLED or %TRUE if the invocation was handled, %G_DBUS_METHOD_INVOCATION_UNHANDLED or %FALSE to let other signal handlers run.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="invocation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="1213">A #GDBusMethodInvocation.</doc>
            <type name="Gio.DBusMethodInvocation"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="DBusScreenshotIface"
            c:type="PhoshDBusScreenshotIface"
            glib:is-gtype-struct-for="DBusScreenshot">
      <doc xml:space="preserve"
           filename="src/dbus/phosh-screenshot-dbus.c"
           line="1063">Virtual table for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Shell-Screenshot.top_of_page"&gt;org.gnome.Shell.Screenshot&lt;/link&gt;.</doc>
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="74"/>
      <field name="parent_iface">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1065">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="handle_flash_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1066">Handler for the #PhoshDBusScreenshot::handle-flash-area signal.</doc>
        <callback name="handle_flash_area">
          <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                           line="33"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
            <parameter name="arg_x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="arg_y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="arg_width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="arg_height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_pick_color">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1067">Handler for the #PhoshDBusScreenshot::handle-pick-color signal.</doc>
        <callback name="handle_pick_color">
          <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                           line="41"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_screenshot">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1068">Handler for the #PhoshDBusScreenshot::handle-screenshot signal.</doc>
        <callback name="handle_screenshot">
          <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                           line="45"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
            <parameter name="arg_include_cursor" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="arg_flash" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="arg_filename" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_screenshot_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1069">Handler for the #PhoshDBusScreenshot::handle-screenshot-area signal.</doc>
        <callback name="handle_screenshot_area">
          <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                           line="52"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
            <parameter name="arg_x" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="arg_y" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="arg_width" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="arg_height" transfer-ownership="none">
              <type name="gint" c:type="gint"/>
            </parameter>
            <parameter name="arg_flash" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="arg_filename" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_screenshot_window">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1070">Handler for the #PhoshDBusScreenshot::handle-screenshot-window signal.</doc>
        <callback name="handle_screenshot_window">
          <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                           line="62"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
            <parameter name="arg_include_frame" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="arg_include_cursor" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="arg_flash" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="arg_filename" transfer-ownership="none">
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_select_area">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="1071">Handler for the #PhoshDBusScreenshot::handle-select-area signal.</doc>
        <callback name="handle_select_area">
          <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                           line="70"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="object" transfer-ownership="none">
              <type name="DBusScreenshot" c:type="PhoshDBusScreenshot*"/>
            </parameter>
            <parameter name="invocation" transfer-ownership="none">
              <type name="Gio.DBusMethodInvocation"
                    c:type="GDBusMethodInvocation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DBusScreenshotProxy"
           c:symbol-prefix="dbus_screenshot_proxy"
           c:type="PhoshDBusScreenshotProxy"
           parent="Gio.DBusProxy"
           glib:type-name="PhoshDBusScreenshotProxy"
           glib:get-type="phosh_dbus_screenshot_proxy_get_type"
           glib:type-struct="DBusScreenshotProxyClass">
      <doc xml:space="preserve"
           filename="src/dbus/phosh-screenshot-dbus.c"
           line="2097">The #PhoshDBusScreenshotProxy structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="302"/>
      <implements name="Gio.AsyncInitable"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="Gio.Initable"/>
      <implements name="DBusScreenshot"/>
      <constructor name="new_finish"
                   c:identifier="phosh_dbus_screenshot_proxy_new_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2288">Finishes an operation started with phosh_dbus_screenshot_proxy_new().</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="318"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="2295">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="DBusScreenshotProxy" c:type="PhoshDBusScreenshot*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2290">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to phosh_dbus_screenshot_proxy_new().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_finish"
                   c:identifier="phosh_dbus_screenshot_proxy_new_for_bus_finish"
                   throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2378">Finishes an operation started with phosh_dbus_screenshot_proxy_new_for_bus().</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="337"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="2385">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="DBusScreenshotProxy" c:type="PhoshDBusScreenshot*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2380">The #GAsyncResult obtained from the #GAsyncReadyCallback passed to phosh_dbus_screenshot_proxy_new_for_bus().</doc>
            <type name="Gio.AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_sync"
                   c:identifier="phosh_dbus_screenshot_proxy_new_for_bus_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2403">Like phosh_dbus_screenshot_proxy_new_sync() but takes a #GBusType instead of a #GDBusConnection.

The calling thread is blocked until a reply is received.

See phosh_dbus_screenshot_proxy_new_for_bus() for the asynchronous version of this constructor.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="340"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="2418">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="DBusScreenshotProxy" c:type="PhoshDBusScreenshot*"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2405">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2406">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2407">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2408">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2409">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="phosh_dbus_screenshot_proxy_new_sync"
                   throws="1">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2313">Synchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Shell-Screenshot.top_of_page"&gt;org.gnome.Shell.Screenshot&lt;/link&gt;. See g_dbus_proxy_new_sync() for more details.

The calling thread is blocked until a reply is received.

See phosh_dbus_screenshot_proxy_new() for the asynchronous version of this constructor.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="321"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="2328">The constructed proxy object or %NULL if @error is set.</doc>
          <type name="DBusScreenshotProxy" c:type="PhoshDBusScreenshot*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2315">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2316">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2317">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2318">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2319">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new"
                c:identifier="phosh_dbus_screenshot_proxy_new"
                glib:finish-func="new_finish">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2258">Asynchronously creates a proxy for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Shell-Screenshot.top_of_page"&gt;org.gnome.Shell.Screenshot&lt;/link&gt;. See g_dbus_proxy_new() for more details.

When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call phosh_dbus_screenshot_proxy_new_finish() to get the result of the operation.

See phosh_dbus_screenshot_proxy_new_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="310"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2260">A #GDBusConnection.</doc>
            <type name="Gio.DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2261">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2262">A bus name (well-known or unique) or %NULL if @connection is not a message bus connection.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2263">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2264">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2265">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2266">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_for_bus"
                c:identifier="phosh_dbus_screenshot_proxy_new_for_bus"
                glib:finish-func="new_for_bus_finish">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2348">Like phosh_dbus_screenshot_proxy_new() but takes a #GBusType instead of a #GDBusConnection.

When the operation is finished, @callback will be invoked in the thread-default main loop of the thread you are calling this method from (see g_main_context_push_thread_default()).
You can then call phosh_dbus_screenshot_proxy_new_for_bus_finish() to get the result of the operation.

See phosh_dbus_screenshot_proxy_new_for_bus_sync() for the synchronous, blocking version of this constructor.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="329"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2350">A #GBusType.</doc>
            <type name="Gio.BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2351">Flags from the #GDBusProxyFlags enumeration.</doc>
            <type name="Gio.DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2352">A bus name (well-known or unique).</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2353">An object path.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2354">A #GCancellable or %NULL.</doc>
            <type name="Gio.Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async"
                     closure="6">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2355">A #GAsyncReadyCallback to call when the request is satisfied.</doc>
            <type name="Gio.AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/dbus/phosh-screenshot-dbus.c"
                 line="2356">User data to pass to @callback.</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusProxy" c:type="GDBusProxy"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="DBusScreenshotProxyPrivate"
              c:type="PhoshDBusScreenshotProxyPrivate*"/>
      </field>
    </class>
    <record name="DBusScreenshotProxyClass"
            c:type="PhoshDBusScreenshotProxyClass"
            glib:is-gtype-struct-for="DBusScreenshotProxy">
      <doc xml:space="preserve"
           filename="src/dbus/phosh-screenshot-dbus.c"
           line="2103">Class structure for #PhoshDBusScreenshotProxy.</doc>
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="302"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2105">The parent class.</doc>
        <type name="Gio.DBusProxyClass" c:type="GDBusProxyClass"/>
      </field>
    </record>
    <record name="DBusScreenshotProxyPrivate"
            c:type="PhoshDBusScreenshotProxyPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="290"/>
    </record>
    <class name="DBusScreenshotSkeleton"
           c:symbol-prefix="dbus_screenshot_skeleton"
           c:type="PhoshDBusScreenshotSkeleton"
           parent="Gio.DBusInterfaceSkeleton"
           glib:type-name="PhoshDBusScreenshotSkeleton"
           glib:get-type="phosh_dbus_screenshot_skeleton_get_type"
           glib:type-struct="DBusScreenshotSkeletonClass">
      <doc xml:space="preserve"
           filename="src/dbus/phosh-screenshot-dbus.c"
           line="2440">The #PhoshDBusScreenshotSkeleton structure contains only private data and should only be accessed using the provided API.</doc>
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="372"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="DBusScreenshot"/>
      <constructor name="new"
                   c:identifier="phosh_dbus_screenshot_skeleton_new">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2711">Creates a skeleton object for the D-Bus interface &lt;link linkend="gdbus-interface-org-gnome-Shell-Screenshot.top_of_page"&gt;org.gnome.Shell.Screenshot&lt;/link&gt;.</doc>
        <source-position filename="src/dbus/phosh-screenshot-dbus.h"
                         line="380"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="2716">The skeleton object.</doc>
          <type name="DBusScreenshotSkeleton" c:type="PhoshDBusScreenshot*"/>
        </return-value>
      </constructor>
      <field name="parent_instance" readable="0" private="1">
        <type name="Gio.DBusInterfaceSkeleton"
              c:type="GDBusInterfaceSkeleton"/>
      </field>
      <field name="priv" readable="0" private="1">
        <type name="DBusScreenshotSkeletonPrivate"
              c:type="PhoshDBusScreenshotSkeletonPrivate*"/>
      </field>
    </class>
    <record name="DBusScreenshotSkeletonClass"
            c:type="PhoshDBusScreenshotSkeletonClass"
            glib:is-gtype-struct-for="DBusScreenshotSkeleton">
      <doc xml:space="preserve"
           filename="src/dbus/phosh-screenshot-dbus.c"
           line="2446">Class structure for #PhoshDBusScreenshotSkeleton.</doc>
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="372"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="2448">The parent class.</doc>
        <type name="Gio.DBusInterfaceSkeletonClass"
              c:type="GDBusInterfaceSkeletonClass"/>
      </field>
    </record>
    <record name="DBusScreenshotSkeletonPrivate"
            c:type="PhoshDBusScreenshotSkeletonPrivate"
            disguised="1"
            opaque="1">
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="360"/>
    </record>
    <class name="LayerSurface"
           c:symbol-prefix="layer_surface"
           c:type="PhoshLayerSurface"
           parent="Gtk.Window"
           glib:type-name="PhoshLayerSurface"
           glib:get-type="phosh_layer_surface_get_type"
           glib:type-struct="LayerSurfaceClass">
      <doc xml:space="preserve"
           filename="src/layersurface.c"
           line="18">A #GtkWindow rendered as a LayerSurface by the compositor

#PhoshLayerSurface allows to use a Wayland surface backed by the
layer-shell protocol as #GtkWindow. This allows to render e.g. panels and
backgrounds using GTK.</doc>
      <source-position filename="src/layersurface.h" line="40"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <virtual-method name="configured">
        <doc xml:space="preserve"
             filename="src/layersurface.h"
             line="20">invoked when layer surface is configured</doc>
        <source-position filename="src/layersurface.h" line="28"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="LayerSurface" c:type="PhoshLayerSurface*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <property name="anchor"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="configured-height"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="configured-width"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="exclusive-zone"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="height"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="kbd-interactivity"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="layer"
                writable="1"
                construct="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="layer-shell" writable="1" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="margin-bottom"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="margin-left"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="margin-right"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="margin-top"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="namespace" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="width"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="wl-output" writable="1" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Window" c:type="GtkWindow"/>
      </field>
      <glib:signal name="configured" when="last">
        <doc xml:space="preserve"
             filename="src/layersurface.c"
             line="611">This signal is emitted once we received the configure event from the
compositor.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="LayerSurfaceClass"
            c:type="PhoshLayerSurfaceClass"
            glib:is-gtype-struct-for="LayerSurface">
      <source-position filename="src/layersurface.h" line="40"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/layersurface.h"
             line="19">The parent class</doc>
        <type name="Gtk.WindowClass" c:type="GtkWindowClass"/>
      </field>
      <field name="configured">
        <doc xml:space="preserve"
             filename="src/layersurface.h"
             line="20">invoked when layer surface is configured</doc>
        <callback name="configured">
          <source-position filename="src/layersurface.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="LayerSurface" c:type="PhoshLayerSurface*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_phosh_reserved1" introspectable="0">
        <callback name="_phosh_reserved1">
          <source-position filename="src/layersurface.h" line="31"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved2" introspectable="0">
        <callback name="_phosh_reserved2">
          <source-position filename="src/layersurface.h" line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved3" introspectable="0">
        <callback name="_phosh_reserved3">
          <source-position filename="src/layersurface.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved4" introspectable="0">
        <callback name="_phosh_reserved4">
          <source-position filename="src/layersurface.h" line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved5" introspectable="0">
        <callback name="_phosh_reserved5">
          <source-position filename="src/layersurface.h" line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved6" introspectable="0">
        <callback name="_phosh_reserved6">
          <source-position filename="src/layersurface.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved7" introspectable="0">
        <callback name="_phosh_reserved7">
          <source-position filename="src/layersurface.h" line="37"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved8" introspectable="0">
        <callback name="_phosh_reserved8">
          <source-position filename="src/layersurface.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved9" introspectable="0">
        <callback name="_phosh_reserved9">
          <source-position filename="src/layersurface.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="Lockscreen"
           c:symbol-prefix="lockscreen"
           c:type="PhoshLockscreen"
           parent="LayerSurface"
           glib:type-name="PhoshLockscreen"
           glib:get-type="phosh_lockscreen_get_type"
           glib:type-struct="LockscreenClass">
      <doc xml:space="preserve"
           filename="src/lockscreen.c"
           line="39">The main lock screen

The lock screen displayed on the primary output featuring the clock
and unlock keypad. It handles displaying ongoing calls when the
shell is locked and can be extended via plugins.

Other outputs are locked via PhoshLockshields.

# CSS nodes

`PhoshLockscreen` has a CSS name with the name `phosh-lockscreen`.</doc>
      <source-position filename="src/lockscreen.h" line="55"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <virtual-method name="unlock_submit">
        <doc xml:space="preserve"
             filename="src/lockscreen.h"
             line="36">This function is invoked when a PIN or password is submitted from the lockscreen
    keypad. It allows to implement a custom authentication mechanism. To indicate success the
    `lockscreen-unlock` signal should be emitted.</doc>
        <source-position filename="src/lockscreen.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="add_extra_page"
              c:identifier="phosh_lockscreen_add_extra_page">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="1271">Inserts a custom widget into the "extra" page of the lockscreen. This page sits in-between the
info page and the keypad page. By default, this page does not exist and is not used. Once an
extra page is added, it can be navigated to by swiping and also via calls to
[method@Lockscreen.set_default_page].</doc>
        <source-position filename="src/lockscreen.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1273">The `PhoshLockscreen`</doc>
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1274">The extra #GtkWidget to insert into the lockscreen carousel</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="clear_pin_entry"
              c:identifier="phosh_lockscreen_clear_pin_entry">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="1231">Clears the current contents of the keypad PIN entry buffer</doc>
        <source-position filename="src/lockscreen.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1233">The `PhoshLockscreen`</doc>
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_page"
              c:identifier="phosh_lockscreen_get_page"
              glib:get-property="page">
        <source-position filename="src/lockscreen.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/lockscreen.c"
               line="1131">The #PhoshLockscreenPage that is currently shown</doc>
          <type name="LockscreenPage" c:type="PhoshLockscreenPage"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1129">The `PhoshLockscreen`</doc>
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pin_entry"
              c:identifier="phosh_lockscreen_get_pin_entry">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="1213">Get the current contents of the keypad PIN entry buffer</doc>
        <source-position filename="src/lockscreen.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/lockscreen.c"
               line="1219">the contents of the entry buffer</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1215">The `PhoshLockscreen`</doc>
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_default_page"
              c:identifier="phosh_lockscreen_set_default_page">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="1195">Specifies which page should be shown by default when the lockscreen is made visible. This will
also be the page that is shown when the keypad idle timer is reached.</doc>
        <source-position filename="src/lockscreen.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1197">The `PhoshLockscreen`
page: the page to show by default</doc>
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <type name="LockscreenPage" c:type="PhoshLockscreenPage"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_page" c:identifier="phosh_lockscreen_set_page">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="1157">Scrolls to a specific page in the carousel. The state of the deck
isn't changed.</doc>
        <source-position filename="src/lockscreen.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1159">The `PhoshLockscreen`
page: The page to scroll to</doc>
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <type name="LockscreenPage" c:type="PhoshLockscreenPage"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_unlock_status"
              c:identifier="phosh_lockscreen_set_unlock_status">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="1292">Sets the text displayed in the unlock status label.</doc>
        <source-position filename="src/lockscreen.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1294">The `PhoshLockscreen`</doc>
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
          <parameter name="status" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1295">The status text</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="shake_pin_entry"
              c:identifier="phosh_lockscreen_shake_pin_entry">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="1246">Triggers an animation that shakes the PIN entry left and right for a brief period.
After the animation is complete, the PIN entry buffer is cleared. Used to visually indicate
authentication errors.</doc>
        <source-position filename="src/lockscreen.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen.c"
                 line="1248">The `PhoshLockscreen`</doc>
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="calls-manager"
                introspectable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="979">The calls manager handling incoming and active calls.</doc>
        <type/>
      </property>
      <property name="page"
                transfer-ownership="none"
                getter="get_page"
                default-value="PHOSH_LOCKSCREEN_PAGE_UNLOCK">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="998">The currently active carousel page</doc>
        <type name="LockscreenPage"/>
      </property>
      <property name="require-unlock"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="989">Require entering PIN or password to unlock. If false, unlock by swiping up.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="LayerSurface" c:type="PhoshLayerSurface"/>
      </field>
      <glib:signal name="lockscreen-unlock" when="last">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="1011">This signal is emitted when authentication was successful and the
session should be unlocked.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="wakeup-output" when="last">
        <doc xml:space="preserve"
             filename="src/lockscreen.c"
             line="1021">Emitted when the output showing the lock screen should be woken
up.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="LockscreenClass"
            c:type="PhoshLockscreenClass"
            glib:is-gtype-struct-for="Lockscreen">
      <source-position filename="src/lockscreen.h" line="55"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/lockscreen.h"
             line="35">The parent class</doc>
        <type name="LayerSurfaceClass" c:type="PhoshLayerSurfaceClass"/>
      </field>
      <field name="unlock_submit">
        <doc xml:space="preserve"
             filename="src/lockscreen.h"
             line="36">This function is invoked when a PIN or password is submitted from the lockscreen
    keypad. It allows to implement a custom authentication mechanism. To indicate success the
    `lockscreen-unlock` signal should be emitted.</doc>
        <callback name="unlock_submit">
          <source-position filename="src/lockscreen.h" line="43"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Lockscreen" c:type="PhoshLockscreen*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_phosh_reserved1" introspectable="0">
        <callback name="_phosh_reserved1">
          <source-position filename="src/lockscreen.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved2" introspectable="0">
        <callback name="_phosh_reserved2">
          <source-position filename="src/lockscreen.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved3" introspectable="0">
        <callback name="_phosh_reserved3">
          <source-position filename="src/lockscreen.h" line="48"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved4" introspectable="0">
        <callback name="_phosh_reserved4">
          <source-position filename="src/lockscreen.h" line="49"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved5" introspectable="0">
        <callback name="_phosh_reserved5">
          <source-position filename="src/lockscreen.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved6" introspectable="0">
        <callback name="_phosh_reserved6">
          <source-position filename="src/lockscreen.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved7" introspectable="0">
        <callback name="_phosh_reserved7">
          <source-position filename="src/lockscreen.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved8" introspectable="0">
        <callback name="_phosh_reserved8">
          <source-position filename="src/lockscreen.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved9" introspectable="0">
        <callback name="_phosh_reserved9">
          <source-position filename="src/lockscreen.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="LockscreenManager"
           c:symbol-prefix="lockscreen_manager"
           c:type="PhoshLockscreenManager"
           parent="GObject.Object"
           glib:type-name="PhoshLockscreenManager"
           glib:get-type="phosh_lockscreen_manager_get_type"
           glib:type-struct="LockscreenManagerClass">
      <doc xml:space="preserve"
           filename="src/lockscreen-manager.c"
           line="21">The singleton that manages screen locking

The #PhoshLockscreenManager is responsible for putting the #PhoshLockscreen
on the primary output and a #PhoshLockshield on other outputs when the session
becomes idle or when invoked explicitly via phosh_lockscreen_manager_set_locked().</doc>
      <source-position filename="src/lockscreen-manager.h" line="14"/>
      <method name="get_active_time"
              c:identifier="phosh_lockscreen_manager_get_active_time">
        <source-position filename="src/lockscreen-manager.h" line="28"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="LockscreenManager" c:type="PhoshLockscreenManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_locked"
              c:identifier="phosh_lockscreen_manager_get_locked"
              glib:get-property="locked">
        <source-position filename="src/lockscreen-manager.h" line="24"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="LockscreenManager" c:type="PhoshLockscreenManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_lockscreen"
              c:identifier="phosh_lockscreen_manager_get_lockscreen">
        <doc xml:space="preserve"
             filename="src/lockscreen-manager.c"
             line="483">Gets the current [type@Lockscreen], if one exists (NULL otherwise).</doc>
        <source-position filename="src/lockscreen-manager.h" line="29"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/lockscreen-manager.c"
               line="489">The lockscreen</doc>
          <type name="Lockscreen" c:type="PhoshLockscreen*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen-manager.c"
                 line="485">The lockscreen manager</doc>
            <type name="LockscreenManager" c:type="PhoshLockscreenManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_page" c:identifier="phosh_lockscreen_manager_get_page">
        <source-position filename="src/lockscreen-manager.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/lockscreen-manager.c"
               line="447">The currently shown #PhoshLockscreenPage in the #PhoshLockscreen</doc>
          <type name="LockscreenPage" c:type="PhoshLockscreenPage"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/lockscreen-manager.c"
                 line="445">The #PhoshLockscreenManager</doc>
            <type name="LockscreenManager" c:type="PhoshLockscreenManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_locked"
              c:identifier="phosh_lockscreen_manager_set_locked"
              glib:set-property="locked">
        <source-position filename="src/lockscreen-manager.h" line="22"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="LockscreenManager" c:type="PhoshLockscreenManager*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_page" c:identifier="phosh_lockscreen_manager_set_page">
        <source-position filename="src/lockscreen-manager.h" line="25"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="LockscreenManager" c:type="PhoshLockscreenManager*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <type name="LockscreenPage" c:type="PhoshLockscreenPage"/>
          </parameter>
        </parameters>
      </method>
      <property name="calls-manager"
                introspectable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type/>
      </property>
      <property name="locked"
                writable="1"
                transfer-ownership="none"
                setter="set_locked"
                getter="get_locked"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <glib:signal name="wakeup-outputs" when="last">
        <doc xml:space="preserve"
             filename="src/lockscreen-manager.c"
             line="387">Emitted when the outputs should be woken up.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="LockscreenManagerClass"
            c:type="PhoshLockscreenManagerClass"
            glib:is-gtype-struct-for="LockscreenManager">
      <source-position filename="src/lockscreen-manager.h" line="14"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="LockscreenPage"
                 glib:type-name="PhoshLockscreenPage"
                 glib:get-type="phosh_lockscreen_page_get_type"
                 c:type="PhoshLockscreenPage">
      <doc xml:space="preserve"
           filename="src/lockscreen.h"
           line="12">Indicates which page is currently shown on the lockscreen.

This helps `PhoshGnomeShellManager` to decide when to emit
AcceleratorActivated events over DBus</doc>
      <member name="info"
              value="0"
              c:identifier="PHOSH_LOCKSCREEN_PAGE_INFO"
              glib:nick="info"
              glib:name="PHOSH_LOCKSCREEN_PAGE_INFO">
        <doc xml:space="preserve"
             filename="src/lockscreen.h"
             line="14">The info page (clock, notifications, MPRIS, etc)</doc>
      </member>
      <member name="extra"
              value="1"
              c:identifier="PHOSH_LOCKSCREEN_PAGE_EXTRA"
              glib:nick="extra"
              glib:name="PHOSH_LOCKSCREEN_PAGE_EXTRA">
        <doc xml:space="preserve"
             filename="src/lockscreen.h"
             line="15">The extra page (an extension point used by Lockscreen subclasses)</doc>
      </member>
      <member name="unlock"
              value="2"
              c:identifier="PHOSH_LOCKSCREEN_PAGE_UNLOCK"
              glib:nick="unlock"
              glib:name="PHOSH_LOCKSCREEN_PAGE_UNLOCK">
        <doc xml:space="preserve"
             filename="src/lockscreen.h"
             line="16">The unlock page (where PIN is entered)</doc>
      </member>
    </enumeration>
    <docsection name="PhoshDBusScreenshot">
      <doc xml:space="preserve"
           filename="src/dbus/phosh-screenshot-dbus.c"
           line="454">This section contains code for working with the &lt;link linkend="gdbus-interface-org-gnome-Shell-Screenshot.top_of_page"&gt;org.gnome.Shell.Screenshot&lt;/link&gt; D-Bus interface in C.</doc>
    </docsection>
    <class name="QuickSetting"
           c:symbol-prefix="quick_setting"
           c:type="PhoshQuickSetting"
           parent="Gtk.Box"
           glib:type-name="PhoshQuickSetting"
           glib:get-type="phosh_quick_setting_get_type"
           glib:type-struct="QuickSettingClass">
      <doc xml:space="preserve"
           filename="src/quick-setting.c"
           line="18">A `PhoshQuickSetting` represents a state of an entity (like Wi-Fi, Bluetooth) using an icon
and label. It should be added to a PhoshQuickSettingsBox for better integration.

A quick-setting displays the state using an icon and label. The state is set by
[class@Phosh.StatusIcon], which must be added as a child. It can also have a status-page, which
can be used to expose additional features. For example, a Wi-Fi quick-setting can show available
Wi-Fi hotspots as an extra option. When a status widget is set, the quick-setting displays an
arrow at the right end.

A quick-setting itself does not have any provision to display its status-page. It is
completely upto the user to display and hide the status-pages as required. However the
quick-setting can aid in the task with its [property@Phosh.QuickSetting:showing-status] property.
When `showing-status` is false, clicking the arrow will cause the quick-setting to emit
[signal@Phosh.QuickSetting::show-status]. If `showing-status` is true, then it will emit
[signal@Phosh.QuickSetting::hide-status]. The user of the quick-setting is expected to follow
this convention and set `showing-status` based on whether they are displaying the status-page
or not.

A quick-setting might be temporarily prevented from showing its status-page using
[property@Phosh.QuickSetting:can-show-status]. Again, `PhoshQuickSettingsBox` can take care of
this property, such that once you tell the box if showing status-page is allowed, it will ensure
that the children's `can-show-status` are synchronized with it.

A quick-setting can be in an active or inactive state. However clicking the quick-setting does
not toggle its state. The user must set the state using [property@Phosh.QuickSetting:active]. If
the child [class@StatusIcon] has an `enabled` property it will be automatically bound to the
[property@Phosh.QuickSetting:active] property.

When a quick-setting is clicked, [signal@Phosh.QuickSetting::clicked] is emitted. When it is
long-pressed or right-clicked, [signal@PhoshQuickSetting::long-pressed] is emitted.

The common usecase of `long-pressed` is to launch an action (like `settings.launch-panel`). So to
avoid duplicating this process for each quick-setting, the user can set
[property@Phosh.QuickSetting:long-press-action-name] and
[property@Phosh.QuickSetting:long-press-action-target]. The quick-setting then launches that
appropriate action.</doc>
      <source-position filename="src/quick-setting.h" line="31"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="phosh_quick_setting_new">
        <source-position filename="src/quick-setting.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="status_page" transfer-ownership="none">
            <type name="StatusPage" c:type="PhoshStatusPage*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_active"
              c:identifier="phosh_quick_setting_get_active"
              glib:get-property="active">
        <source-position filename="src/quick-setting.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_show_status"
              c:identifier="phosh_quick_setting_get_can_show_status"
              glib:get-property="can-show-status">
        <source-position filename="src/quick-setting.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_long_press_action_name"
              c:identifier="phosh_quick_setting_get_long_press_action_name"
              glib:get-property="long-press-action-name">
        <source-position filename="src/quick-setting.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_long_press_action_target"
              c:identifier="phosh_quick_setting_get_long_press_action_target"
              glib:get-property="long-press-action-target">
        <source-position filename="src/quick-setting.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_showing_status"
              c:identifier="phosh_quick_setting_get_showing_status"
              glib:get-property="showing-status">
        <source-position filename="src/quick-setting.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_status_page"
              c:identifier="phosh_quick_setting_get_status_page"
              glib:get-property="status-page">
        <doc xml:space="preserve"
             filename="src/quick-setting.c"
             line="594">Get the current status widget of the quick-setting.</doc>
        <source-position filename="src/quick-setting.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/quick-setting.c"
               line="600">The status-page or `NULL`.</doc>
          <type name="StatusPage" c:type="PhoshStatusPage*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/quick-setting.c"
                 line="596">A quick-setting</doc>
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_active"
              c:identifier="phosh_quick_setting_set_active"
              glib:set-property="active">
        <source-position filename="src/quick-setting.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
          <parameter name="active" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_show_status"
              c:identifier="phosh_quick_setting_set_can_show_status"
              glib:set-property="can-show-status">
        <source-position filename="src/quick-setting.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
          <parameter name="can_show_status" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_long_press_action_name"
              c:identifier="phosh_quick_setting_set_long_press_action_name"
              glib:set-property="long-press-action-name">
        <source-position filename="src/quick-setting.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_long_press_action_target"
              c:identifier="phosh_quick_setting_set_long_press_action_target"
              glib:set-property="long-press-action-target">
        <source-position filename="src/quick-setting.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
          <parameter name="action_target" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_showing_status"
              c:identifier="phosh_quick_setting_set_showing_status"
              glib:set-property="showing-status">
        <source-position filename="src/quick-setting.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
          <parameter name="showing_status" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_status_page"
              c:identifier="phosh_quick_setting_set_status_page"
              glib:set-property="status-page">
        <doc xml:space="preserve"
             filename="src/quick-setting.c"
             line="547">Set the status-page of the quick-setting.</doc>
        <source-position filename="src/quick-setting.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/quick-setting.c"
                 line="549">A quick-setting</doc>
            <type name="QuickSetting" c:type="PhoshQuickSetting*"/>
          </instance-parameter>
          <parameter name="status_page" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/quick-setting.c"
                 line="550">A status-page or `NULL`</doc>
            <type name="StatusPage" c:type="PhoshStatusPage*"/>
          </parameter>
        </parameters>
      </method>
      <property name="active"
                writable="1"
                transfer-ownership="none"
                setter="set_active"
                getter="get_active"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/quick-setting.c"
             line="334">The active state of the child.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="can-show-status"
                writable="1"
                transfer-ownership="none"
                setter="set_can_show_status"
                getter="get_can_show_status"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/quick-setting.c"
             line="352">If the child can display its status.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="long-press-action-name"
                writable="1"
                transfer-ownership="none"
                setter="set_long_press_action_name"
                getter="get_long_press_action_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/quick-setting.c"
             line="370">Action name to trigger on long-press.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="long-press-action-target"
                writable="1"
                transfer-ownership="none"
                setter="set_long_press_action_target"
                getter="get_long_press_action_target"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/quick-setting.c"
             line="379">Action target for `long-press-action-name`.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="showing-status"
                writable="1"
                transfer-ownership="none"
                setter="set_showing_status"
                getter="get_showing_status"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/quick-setting.c"
             line="343">If the child is displaying its status.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="status-page"
                writable="1"
                transfer-ownership="none"
                setter="set_status_page"
                getter="get_status_page">
        <doc xml:space="preserve"
             filename="src/quick-setting.c"
             line="361">The status-page.</doc>
        <type name="StatusPage"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Box" c:type="GtkBox"/>
      </field>
      <glib:signal name="clicked" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="hide-status" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="long-pressed" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="show-status" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="QuickSettingClass"
            c:type="PhoshQuickSettingClass"
            glib:is-gtype-struct-for="QuickSetting">
      <source-position filename="src/quick-setting.h" line="31"/>
      <field name="parent_class">
        <type name="Gtk.BoxClass" c:type="GtkBoxClass"/>
      </field>
      <field name="_phosh_reserved0" introspectable="0">
        <callback name="_phosh_reserved0">
          <source-position filename="src/quick-setting.h" line="21"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved1" introspectable="0">
        <callback name="_phosh_reserved1">
          <source-position filename="src/quick-setting.h" line="22"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved2" introspectable="0">
        <callback name="_phosh_reserved2">
          <source-position filename="src/quick-setting.h" line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved3" introspectable="0">
        <callback name="_phosh_reserved3">
          <source-position filename="src/quick-setting.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved4" introspectable="0">
        <callback name="_phosh_reserved4">
          <source-position filename="src/quick-setting.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved5" introspectable="0">
        <callback name="_phosh_reserved5">
          <source-position filename="src/quick-setting.h" line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved6" introspectable="0">
        <callback name="_phosh_reserved6">
          <source-position filename="src/quick-setting.h" line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved7" introspectable="0">
        <callback name="_phosh_reserved7">
          <source-position filename="src/quick-setting.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved8" introspectable="0">
        <callback name="_phosh_reserved8">
          <source-position filename="src/quick-setting.h" line="29"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved9" introspectable="0">
        <callback name="_phosh_reserved9">
          <source-position filename="src/quick-setting.h" line="30"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="ScreenshotManager"
           c:symbol-prefix="screenshot_manager"
           c:type="PhoshScreenshotManager"
           parent="DBusScreenshotSkeleton"
           glib:type-name="PhoshScreenshotManager"
           glib:get-type="phosh_screenshot_manager_get_type"
           glib:type-struct="ScreenshotManagerClass">
      <doc xml:space="preserve"
           filename="src/screenshot-manager.c"
           line="35">Screenshot interaction

The #PhoshScreenshotManager is responsible for
taking screenshots.</doc>
      <source-position filename="src/screenshot-manager.h" line="17"/>
      <implements name="Gio.DBusInterface"/>
      <implements name="DBusScreenshot"/>
      <constructor name="new" c:identifier="phosh_screenshot_manager_new">
        <source-position filename="src/screenshot-manager.h" line="20"/>
        <return-value transfer-ownership="full">
          <type name="ScreenshotManager" c:type="PhoshScreenshotManager*"/>
        </return-value>
      </constructor>
      <method name="take_screenshot"
              c:identifier="phosh_screenshot_manager_take_screenshot">
        <doc xml:space="preserve"
             filename="src/screenshot-manager.c"
             line="1343">Initiate a screenshot of all outputs or the given area. If `copy_to_clipboard` is
`TRUE` the screenshot is also copied to the clipboard.</doc>
        <source-position filename="src/screenshot-manager.h" line="21"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/screenshot-manager.c"
               line="1354">`FALSE` on failure, otherwise `TRUE`</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/screenshot-manager.c"
                 line="1345">The screenshot manager</doc>
            <type name="ScreenshotManager" c:type="PhoshScreenshotManager*"/>
          </instance-parameter>
          <parameter name="area"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/screenshot-manager.c"
                 line="1346">The area to capture or %NULL to capture all outputs</doc>
            <type name="Gdk.Rectangle" c:type="const GdkRectangle*"/>
          </parameter>
          <parameter name="filename"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="src/screenshot-manager.c"
                 line="1347">The output filename or %NULL to autogenerate a filename</doc>
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="copy_to_clipboard" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/screenshot-manager.c"
                 line="1348">Whether to use the clipboard</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="include_cursor" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/screenshot-manager.c"
                 line="1349">Whether to include the cursor</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="ScreenshotManagerClass"
            c:type="PhoshScreenshotManagerClass"
            glib:is-gtype-struct-for="ScreenshotManager">
      <source-position filename="src/screenshot-manager.h" line="17"/>
      <field name="parent_class">
        <type name="DBusScreenshotSkeletonClass"
              c:type="PhoshDBusScreenshotSkeletonClass"/>
      </field>
    </record>
    <class name="Shell"
           c:symbol-prefix="shell"
           c:type="PhoshShell"
           parent="GObject.Object"
           glib:type-name="PhoshShell"
           glib:get-type="phosh_shell_get_type"
           glib:type-struct="ShellClass">
      <doc xml:space="preserve"
           filename="src/shell.c"
           line="106">The shell singleton

#PhoshShell is responsible for instantiating the GUI
parts of the shell#PhoshTopPanel, #PhoshHome,… and the managers that
interface with DBus #PhoshMonitorManager, #PhoshFeedbackManager, …
and coordinates between them.</doc>
      <source-position filename="src/shell.h" line="36"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <constructor name="new" c:identifier="phosh_shell_new">
        <source-position filename="src/shell.h" line="38"/>
        <return-value transfer-ownership="full">
          <type name="Shell" c:type="PhoshShell*"/>
        </return-value>
      </constructor>
      <function name="get_default" c:identifier="phosh_shell_get_default">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="2153">Get the shell singleton</doc>
        <source-position filename="src/shell.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/shell.c"
               line="2158">The shell singleton</doc>
          <type name="Shell" c:type="PhoshShell*"/>
        </return-value>
      </function>
      <virtual-method name="get_lockscreen_type" invoker="get_lockscreen_type">
        <source-position filename="src/shell.h" line="24"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Shell" c:type="PhoshShell*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="fade_out" c:identifier="phosh_shell_fade_out">
        <source-position filename="src/shell.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Shell" c:type="PhoshShell*"/>
          </instance-parameter>
          <parameter name="timeout" transfer-ownership="none">
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_locked"
              c:identifier="phosh_shell_get_locked"
              glib:get-property="locked">
        <source-position filename="src/shell.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/shell.c"
               line="2407">%TRUE if the shell is currently locked, otherwise %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/shell.c"
                 line="2405">The #PhoshShell singleton</doc>
            <type name="Shell" c:type="PhoshShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_lockscreen_manager"
              c:identifier="phosh_shell_get_lockscreen_manager">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1638">Get the lockscreen manager</doc>
        <source-position filename="src/shell.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/shell.c"
               line="1644">The lockscreen manager</doc>
          <type name="LockscreenManager" c:type="PhoshLockscreenManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/shell.c"
                 line="1640">The shell singleton</doc>
            <type name="Shell" c:type="PhoshShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_lockscreen_type"
              c:identifier="phosh_shell_get_lockscreen_type">
        <source-position filename="src/shell.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Shell" c:type="PhoshShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_screenshot_manager"
              c:identifier="phosh_shell_get_screenshot_manager">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1758">Get the screenshot manager</doc>
        <source-position filename="src/shell.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/shell.c"
               line="1764">The screenshot manager</doc>
          <type name="ScreenshotManager" c:type="PhoshScreenshotManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/shell.c"
                 line="1760">The shell singleton</doc>
            <type name="Shell" c:type="PhoshShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_usable_area"
              c:identifier="phosh_shell_get_usable_area">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="2053">Gives the usable area in pixels usable by a client on the primary
display.</doc>
        <source-position filename="src/shell.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/shell.c"
                 line="2055">The shell</doc>
            <type name="Shell" c:type="PhoshShell*"/>
          </instance-parameter>
          <parameter name="x"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="src/shell.c"
                 line="2056">The x coordinate where client usable area starts</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
          <parameter name="y"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="src/shell.c"
                 line="2057">The y coordinate where client usable area starts</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
          <parameter name="width"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="src/shell.c"
                 line="2058">The width of the client usable area</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
          <parameter name="height"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1">
            <doc xml:space="preserve"
                 filename="src/shell.c"
                 line="2059">The height of the client usable area</doc>
            <type name="gint" c:type="int*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_default" c:identifier="phosh_shell_set_default">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="2136">Set the PhoshShell singleton that is returned by `phosh_shell_get_default()`</doc>
        <source-position filename="src/shell.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/shell.c"
                 line="2138">The shell to use</doc>
            <type name="Shell" c:type="PhoshShell*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="builtin-monitor"
                version="0.10.1"
                introspectable="0"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1238">The built in monitor. This is a hardware property and hence can
only be read. It can be %NULL when not present or disabled.</doc>
        <type/>
      </property>
      <property name="docked"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1227">Whether the device is currently docked. This mirrors the property
from #PhoshDockedManager for easier access.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="locked"
                writable="1"
                transfer-ownership="none"
                getter="get_locked"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1217">Whether the screen is currently locked. This mirrors the property
from #PhoshLockscreenManager for easier access.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="overview-visible"
                writable="1"
                transfer-ownership="none"
                default-value="TRUE">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1274">Whether to display the `PhoshHome` (overview and home bar)</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="primary-monitor"
                version="0.0.2"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1250">The primary monitor that has the panels, lock screen etc.</doc>
        <type/>
      </property>
      <property name="shell-state"
                version="0.10.0"
                introspectable="0"
                transfer-ownership="none"
                default-value="PHOSH_STATE_NONE">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1261">The state of the shell (locked, modal dialog shown, …)</doc>
        <type/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="ready" when="last" version="0.11.0">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1286">The ready signal is emitted once when the shell finished starting
up.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ShellClass"
            c:type="PhoshShellClass"
            glib:is-gtype-struct-for="Shell">
      <source-position filename="src/shell.h" line="36"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_lockscreen_type">
        <callback name="get_lockscreen_type">
          <source-position filename="src/shell.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Shell" c:type="PhoshShell*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_phosh_reserved1" introspectable="0">
        <callback name="_phosh_reserved1">
          <source-position filename="src/shell.h" line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved2" introspectable="0">
        <callback name="_phosh_reserved2">
          <source-position filename="src/shell.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved3" introspectable="0">
        <callback name="_phosh_reserved3">
          <source-position filename="src/shell.h" line="29"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved4" introspectable="0">
        <callback name="_phosh_reserved4">
          <source-position filename="src/shell.h" line="30"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved5" introspectable="0">
        <callback name="_phosh_reserved5">
          <source-position filename="src/shell.h" line="31"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved6" introspectable="0">
        <callback name="_phosh_reserved6">
          <source-position filename="src/shell.h" line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved7" introspectable="0">
        <callback name="_phosh_reserved7">
          <source-position filename="src/shell.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved8" introspectable="0">
        <callback name="_phosh_reserved8">
          <source-position filename="src/shell.h" line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved9" introspectable="0">
        <callback name="_phosh_reserved9">
          <source-position filename="src/shell.h" line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="StatusIcon"
           c:symbol-prefix="status_icon"
           c:type="PhoshStatusIcon"
           parent="Gtk.Bin"
           glib:type-name="PhoshStatusIcon"
           glib:get-type="phosh_status_icon_get_type"
           glib:type-struct="StatusIconClass">
      <doc xml:space="preserve"
           filename="src/status-icon.c"
           line="15">Base class for status icons used in the Phosh's top-bar or in
[type@QuickSetting]s. It's very common to have the same status icon
class used for both places.

If the widget will be used in a [type@QuickSetting] it is
recommended (but not required) that derived classes implement a
`enabled` property.</doc>
      <source-position filename="src/status-icon.h" line="37"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="phosh_status_icon_new">
        <source-position filename="src/status-icon.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="idle_init">
        <doc xml:space="preserve"
             filename="src/status-icon.h"
             line="20">a callback to be invoked once on idle</doc>
        <source-position filename="src/status-icon.h" line="25"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_extra_widget"
              c:identifier="phosh_status_icon_get_extra_widget"
              glib:get-property="extra-widget">
        <doc xml:space="preserve"
             filename="src/status-icon.c"
             line="339">Get the extra widget or %NULL if there's no extra widget</doc>
        <source-position filename="src/status-icon.h" line="45"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="src/status-icon.c"
               line="345">The extra widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/status-icon.c"
                 line="341">A status icon</doc>
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="phosh_status_icon_get_icon_name"
              glib:get-property="icon-name">
        <source-position filename="src/status-icon.h" line="43"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_size"
              c:identifier="phosh_status_icon_get_icon_size"
              glib:get-property="icon-size">
        <source-position filename="src/status-icon.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.IconSize" c:type="GtkIconSize"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_info"
              c:identifier="phosh_status_icon_get_info"
              glib:get-property="info">
        <source-position filename="src/status-icon.h" line="47"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_always"
              c:identifier="phosh_status_icon_get_show_always">
        <source-position filename="src/status-icon.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_extra_widget"
              c:identifier="phosh_status_icon_set_extra_widget"
              glib:set-property="extra-widget">
        <source-position filename="src/status-icon.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="phosh_status_icon_set_icon_name"
              glib:set-property="icon-name">
        <source-position filename="src/status-icon.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_size"
              c:identifier="phosh_status_icon_set_icon_size"
              glib:set-property="icon-size">
        <source-position filename="src/status-icon.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="Gtk.IconSize" c:type="GtkIconSize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_info"
              c:identifier="phosh_status_icon_set_info"
              glib:set-property="info">
        <source-position filename="src/status-icon.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_always"
              c:identifier="phosh_status_icon_set_show_always">
        <source-position filename="src/status-icon.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
          </instance-parameter>
          <parameter name="show_always" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="extra-widget"
                writable="1"
                transfer-ownership="none"
                setter="set_extra_widget"
                getter="get_extra_widget">
        <doc xml:space="preserve"
             filename="src/status-icon.c"
             line="190">An extra widget to display. This is used for extra information when
used in PhoshTopPanel. When used in [type@QuickSetting] this
is not needed.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="icon-name"
                writable="1"
                transfer-ownership="none"
                setter="set_icon_name"
                getter="get_icon_name"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/status-icon.c"
             line="171">The name of the icon to display in the widget</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="icon-size"
                writable="1"
                transfer-ownership="none"
                setter="set_icon_size"
                getter="get_icon_size"
                default-value="GTK_ICON_SIZE_LARGE_TOOLBAR">
        <doc xml:space="preserve"
             filename="src/status-icon.c"
             line="180">The size of the icon to display in the widget</doc>
        <type name="Gtk.IconSize"/>
      </property>
      <property name="info"
                writable="1"
                transfer-ownership="none"
                setter="set_info"
                getter="get_info"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/status-icon.c"
             line="201">Textual information to display. Think of it as the [type@StatusIcon]'s
label.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
    </class>
    <record name="StatusIconClass"
            c:type="PhoshStatusIconClass"
            glib:is-gtype-struct-for="StatusIcon">
      <source-position filename="src/status-icon.h" line="37"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/status-icon.h"
             line="19">The parent class</doc>
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="idle_init">
        <doc xml:space="preserve"
             filename="src/status-icon.h"
             line="20">a callback to be invoked once on idle</doc>
        <callback name="idle_init">
          <source-position filename="src/status-icon.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="StatusIcon" c:type="PhoshStatusIcon*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_phosh_reserved1" introspectable="0">
        <callback name="_phosh_reserved1">
          <source-position filename="src/status-icon.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved2" introspectable="0">
        <callback name="_phosh_reserved2">
          <source-position filename="src/status-icon.h" line="29"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved3" introspectable="0">
        <callback name="_phosh_reserved3">
          <source-position filename="src/status-icon.h" line="30"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved4" introspectable="0">
        <callback name="_phosh_reserved4">
          <source-position filename="src/status-icon.h" line="31"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved5" introspectable="0">
        <callback name="_phosh_reserved5">
          <source-position filename="src/status-icon.h" line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved6" introspectable="0">
        <callback name="_phosh_reserved6">
          <source-position filename="src/status-icon.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved7" introspectable="0">
        <callback name="_phosh_reserved7">
          <source-position filename="src/status-icon.h" line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved8" introspectable="0">
        <callback name="_phosh_reserved8">
          <source-position filename="src/status-icon.h" line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved9" introspectable="0">
        <callback name="_phosh_reserved9">
          <source-position filename="src/status-icon.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="StatusPage"
           c:symbol-prefix="status_page"
           c:type="PhoshStatusPage"
           parent="Gtk.Bin"
           glib:type-name="PhoshStatusPage"
           glib:get-type="phosh_status_page_get_type"
           glib:type-struct="StatusPageClass">
      <doc xml:space="preserve"
           filename="src/status-page.c"
           line="16">Additional status information associated with a [class@QuickSetting].

This is displayed when the quick setting needs to show status.</doc>
      <source-position filename="src/status-page.h" line="30"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="phosh_status_page_new">
        <source-position filename="src/status-page.h" line="32"/>
        <return-value transfer-ownership="none">
          <type name="StatusPage" c:type="PhoshStatusPage*"/>
        </return-value>
      </constructor>
      <method name="get_footer"
              c:identifier="phosh_status_page_get_footer"
              glib:get-property="footer">
        <doc xml:space="preserve"
             filename="src/status-page.c"
             line="389">Get the footer of the status page</doc>
        <source-position filename="src/status-page.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/status-page.c"
               line="395">The status page footer</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/status-page.c"
                 line="391">A quick setting status page</doc>
            <type name="StatusPage" c:type="PhoshStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header"
              c:identifier="phosh_status_page_get_header"
              glib:get-property="header">
        <doc xml:space="preserve"
             filename="src/status-page.c"
             line="336">Get the header widget of the status page</doc>
        <source-position filename="src/status-page.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/status-page.c"
               line="342">The status page header</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/status-page.c"
                 line="338">A quick setting status page</doc>
            <type name="StatusPage" c:type="PhoshStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="phosh_status_page_get_title"
              glib:get-property="title">
        <source-position filename="src/status-page.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusPage" c:type="PhoshStatusPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_footer"
              c:identifier="phosh_status_page_set_footer"
              glib:set-property="footer">
        <doc xml:space="preserve"
             filename="src/status-page.c"
             line="356">Set the footer widget shown at the bottom of a status page</doc>
        <source-position filename="src/status-page.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/status-page.c"
                 line="358">A quick setting status page</doc>
            <type name="StatusPage" c:type="PhoshStatusPage*"/>
          </instance-parameter>
          <parameter name="footer" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_header"
              c:identifier="phosh_status_page_set_header"
              glib:set-property="header">
        <doc xml:space="preserve"
             filename="src/status-page.c"
             line="303">Set the header widget of the status page. See
[property@StatusPage:header].</doc>
        <source-position filename="src/status-page.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/status-page.c"
                 line="305">A quick setting status page</doc>
            <type name="StatusPage" c:type="PhoshStatusPage*"/>
          </instance-parameter>
          <parameter name="header" transfer-ownership="none">
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="phosh_status_page_set_title"
              glib:set-property="title">
        <source-position filename="src/status-page.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StatusPage" c:type="PhoshStatusPage*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <property name="footer"
                writable="1"
                transfer-ownership="none"
                setter="set_footer"
                getter="get_footer">
        <doc xml:space="preserve"
             filename="src/status-page.c"
             line="221">Widget displayed at the very bottom - usually a button.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="header"
                writable="1"
                transfer-ownership="none"
                setter="set_header"
                getter="get_header">
        <doc xml:space="preserve"
             filename="src/status-page.c"
             line="212">An extra widget to add to end of the status page's header</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="title"
                writable="1"
                transfer-ownership="none"
                setter="set_title"
                getter="get_title"
                default-value="NULL">
        <doc xml:space="preserve"
             filename="src/status-page.c"
             line="203">The status page title</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
      <glib:signal name="done" when="last">
        <doc xml:space="preserve"
             filename="src/status-page.c"
             line="233">The status page should be closed</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="StatusPageClass"
            c:type="PhoshStatusPageClass"
            glib:is-gtype-struct-for="StatusPage">
      <source-position filename="src/status-page.h" line="30"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="_phosh_reserved0" introspectable="0">
        <callback name="_phosh_reserved0">
          <source-position filename="src/status-page.h" line="20"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved1" introspectable="0">
        <callback name="_phosh_reserved1">
          <source-position filename="src/status-page.h" line="21"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved2" introspectable="0">
        <callback name="_phosh_reserved2">
          <source-position filename="src/status-page.h" line="22"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved3" introspectable="0">
        <callback name="_phosh_reserved3">
          <source-position filename="src/status-page.h" line="23"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved4" introspectable="0">
        <callback name="_phosh_reserved4">
          <source-position filename="src/status-page.h" line="24"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved5" introspectable="0">
        <callback name="_phosh_reserved5">
          <source-position filename="src/status-page.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved6" introspectable="0">
        <callback name="_phosh_reserved6">
          <source-position filename="src/status-page.h" line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved7" introspectable="0">
        <callback name="_phosh_reserved7">
          <source-position filename="src/status-page.h" line="27"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved8" introspectable="0">
        <callback name="_phosh_reserved8">
          <source-position filename="src/status-page.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved9" introspectable="0">
        <callback name="_phosh_reserved9">
          <source-position filename="src/status-page.h" line="29"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="WallClock"
           c:symbol-prefix="wall_clock"
           c:type="PhoshWallClock"
           parent="GObject.Object"
           glib:type-name="PhoshWallClock"
           glib:get-type="phosh_wall_clock_get_type"
           glib:type-struct="WallClockClass">
      <doc xml:space="preserve"
           filename="src/wall-clock.c"
           line="20">Wall clock used for fetching date and time</doc>
      <source-position filename="src/wall-clock.h" line="36"/>
      <constructor name="new" c:identifier="phosh_wall_clock_new">
        <source-position filename="src/wall-clock.h" line="39"/>
        <return-value transfer-ownership="full">
          <type name="WallClock" c:type="PhoshWallClock*"/>
        </return-value>
      </constructor>
      <function name="get_default" c:identifier="phosh_wall_clock_get_default">
        <doc xml:space="preserve"
             filename="src/wall-clock.c"
             line="181">Get the wall clock singleton</doc>
        <source-position filename="src/wall-clock.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/wall-clock.c"
               line="186">The wall clock singleton</doc>
          <type name="WallClock" c:type="PhoshWallClock*"/>
        </return-value>
      </function>
      <virtual-method name="get_clock" invoker="get_clock">
        <doc xml:space="preserve"
             filename="src/wall-clock.c"
             line="197">Gets the current clock string, if time_only is true this will be just the
current time, otherwise the date + time.</doc>
        <source-position filename="src/wall-clock.h" line="24"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/wall-clock.c"
               line="205">the clock time string</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/wall-clock.c"
                 line="199">The wall clock</doc>
            <type name="WallClock" c:type="PhoshWallClock*"/>
          </instance-parameter>
          <parameter name="time_only" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/wall-clock.c"
                 line="200">whether to return full clock string or just the time</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_time_t">
        <source-position filename="src/wall-clock.h" line="25"/>
        <return-value transfer-ownership="none">
          <type name="gint64" c:type="gint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="WallClock" c:type="PhoshWallClock*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_clock" c:identifier="phosh_wall_clock_get_clock">
        <doc xml:space="preserve"
             filename="src/wall-clock.c"
             line="197">Gets the current clock string, if time_only is true this will be just the
current time, otherwise the date + time.</doc>
        <source-position filename="src/wall-clock.h" line="42"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/wall-clock.c"
               line="205">the clock time string</doc>
          <type name="utf8" c:type="const char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/wall-clock.c"
                 line="199">The wall clock</doc>
            <type name="WallClock" c:type="PhoshWallClock*"/>
          </instance-parameter>
          <parameter name="time_only" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/wall-clock.c"
                 line="200">whether to return full clock string or just the time</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="local_date" c:identifier="phosh_wall_clock_local_date">
        <doc xml:space="preserve"
             filename="src/wall-clock.c"
             line="244">Get the local date as string
We honor LC_MESSAGES so we e.g. don't get a translated date when
the user has LC_MESSAGES=en_US.UTF-8 but LC_TIME to their local
time zone.</doc>
        <source-position filename="src/wall-clock.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="src/wall-clock.c"
               line="253">The local date as string</doc>
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/wall-clock.c"
                 line="246">The wall clock</doc>
            <type name="WallClock" c:type="PhoshWallClock*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_default" c:identifier="phosh_wall_clock_set_default">
        <doc xml:space="preserve"
             filename="src/wall-clock.c"
             line="163">Set the wall clock singleton. This sets the singleton returned by
`phosh_wall_clock_get_default()`.</doc>
        <source-position filename="src/wall-clock.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/wall-clock.c"
                 line="165">The clock to use</doc>
            <type name="WallClock" c:type="PhoshWallClock*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="string_for_datetime"
              c:identifier="phosh_wall_clock_string_for_datetime">
        <source-position filename="src/wall-clock.h" line="44"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="WallClock" c:type="PhoshWallClock*"/>
          </instance-parameter>
          <parameter name="datetime" transfer-ownership="none">
            <type name="GLib.DateTime" c:type="GDateTime*"/>
          </parameter>
          <parameter name="clock_format" transfer-ownership="none">
            <type name="GDesktopEnums.ClockFormat"
                  c:type="GDesktopClockFormat"/>
          </parameter>
          <parameter name="show_full_date" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="date-time"
                transfer-ownership="none"
                default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="time" transfer-ownership="none" default-value="NULL">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="WallClockClass"
            c:type="PhoshWallClockClass"
            glib:is-gtype-struct-for="WallClock">
      <source-position filename="src/wall-clock.h" line="36"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_clock">
        <callback name="get_clock">
          <source-position filename="src/wall-clock.h" line="24"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="src/wall-clock.c"
                 line="205">the clock time string</doc>
            <type name="utf8" c:type="const char*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/wall-clock.c"
                   line="199">The wall clock</doc>
              <type name="WallClock" c:type="PhoshWallClock*"/>
            </parameter>
            <parameter name="time_only" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="src/wall-clock.c"
                   line="200">whether to return full clock string or just the time</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_time_t">
        <callback name="get_time_t">
          <source-position filename="src/wall-clock.h" line="25"/>
          <return-value transfer-ownership="none">
            <type name="gint64" c:type="gint64"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="WallClock" c:type="PhoshWallClock*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="_phosh_reserved2" introspectable="0">
        <callback name="_phosh_reserved2">
          <source-position filename="src/wall-clock.h" line="28"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved3" introspectable="0">
        <callback name="_phosh_reserved3">
          <source-position filename="src/wall-clock.h" line="29"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved4" introspectable="0">
        <callback name="_phosh_reserved4">
          <source-position filename="src/wall-clock.h" line="30"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved5" introspectable="0">
        <callback name="_phosh_reserved5">
          <source-position filename="src/wall-clock.h" line="31"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved6" introspectable="0">
        <callback name="_phosh_reserved6">
          <source-position filename="src/wall-clock.h" line="32"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved7" introspectable="0">
        <callback name="_phosh_reserved7">
          <source-position filename="src/wall-clock.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved8" introspectable="0">
        <callback name="_phosh_reserved8">
          <source-position filename="src/wall-clock.h" line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="_phosh_reserved9" introspectable="0">
        <callback name="_phosh_reserved9">
          <source-position filename="src/wall-clock.h" line="35"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <function name="dbus_screenshot_interface_info"
              c:identifier="phosh_dbus_screenshot_interface_info"
              moved-to="DBusScreenshot.interface_info">
      <doc xml:space="preserve"
           filename="src/dbus/phosh-screenshot-dbus.c"
           line="948">Gets a machine-readable description of the &lt;link linkend="gdbus-interface-org-gnome-Shell-Screenshot.top_of_page"&gt;org.gnome.Shell.Screenshot&lt;/link&gt; D-Bus interface.</doc>
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="82"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="953">A #GDBusInterfaceInfo. Do not free.</doc>
        <type name="Gio.DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
      </return-value>
    </function>
    <function name="dbus_screenshot_override_properties"
              c:identifier="phosh_dbus_screenshot_override_properties"
              moved-to="DBusScreenshot.override_properties">
      <doc xml:space="preserve"
           filename="src/dbus/phosh-screenshot-dbus.c"
           line="961">Overrides all #GObject properties in the #PhoshDBusScreenshot interface for a concrete class.
The properties are overridden in the order they are defined.</doc>
      <source-position filename="src/dbus/phosh-screenshot-dbus.h" line="83"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/dbus/phosh-screenshot-dbus.c"
             line="969">The last property id.</doc>
        <type name="guint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="klass" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="963">The class structure for a #GObject derived class.</doc>
          <type name="GObject.ObjectClass" c:type="GObjectClass*"/>
        </parameter>
        <parameter name="property_id_begin" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/dbus/phosh-screenshot-dbus.c"
               line="964">The property id to assign to the first overridden property.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
